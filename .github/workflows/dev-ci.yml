name: Dev deploy

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, dev]
    defaults:
      run: 
        working-directory: ./dev/

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: dev
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
        cache-dependency-path: './dev/package-lock.json'
    - run: npm ci
    
    - name: Make dev envfile
      uses: SpicyPizza/create-envfile@v2.0.3
      with:
        envkey_DB_HOST: ${{ secrets.AUTH_SECRET }}
        envkey_DB_PORT: ${{ vars.DB_PORT }}
        envkey_DB_USER: ${{ vars.DB_USER }}
        envkey_DB_NAME: ${{ vars.DB_NAME }}
        envkey_NODE_ENV: prod
        envkey_DB_DROP_SCHEMA: 0
        envkey_DB_PASSWORD: ${{ vars.DB_PASSWORD }}
        envkey_AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        file_name: .env
        fail_on_empty: false
        sort_keys: false
    - name: Docker Compose up
      run: docker compose up -d
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USER: root
        DB_PASSWORD: example123
        DB_NAME: nest-events
        DB_DROP_SCHEMA: 0
        AUTH_SECRET: secret123

    - run: npm run build --if-present
    - name: Restart PM2
      run: pm2 restart ./dist/main.js --update-env
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ vars.DB_PORT }}
        DB_USER: ${{ vars.DB_USER }}
        DB_PASSWORD: ${{ vars.DB_PASSWORD }}
        DB_NAME: ${{ vars.DB_NAME }}
        DB_DROP_SCHEMA: ${{ secrets.DB_DROP_SCHEMA }}
        AUTH_SECRET: 'secret123'
